{"mappings":"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","sources":["src/scripts/animintro.js"],"sourcesContent":["// scale\n// set the dimensions and margins of the graph\nvar width = 450\nvar height = 450\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#animcover\")\n  .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n// create dummy data -> just one element per circle\nconst data = [\n  { name: 'Uno', group: 1 },\n  { name: 'Dos', group: 2 },\n  { name: 'Tres', group: 3 },\n  { name: 'Cuatro', group: 4 },\n  { name: 'F', group: 5 },\n  { name: 'E', group: 5 },\n  { name: 'G', group: 5 },\n  { name: 'H', group: 5 },\n  { name: 'I', group: 5 },\n  { name: 'J', group: 5 }\n]\n\n// A scale that gives a X target position for each group\nconst x = d3.scaleOrdinal()\n  .domain([1, 2, 3, 4, 5])\n  .range([50, 50, 50, 50, 50])\n\n// A color scale\nconst color = d3.scaleOrdinal()\n.domain([1, 2, 3, 4, 5])\n.range([ \"#FF6874\", \"#2BC4A9\", \"#9F9FFF\", \"#FFFF9F\", \"#000\"])\n\n// Randomize size\nfunction randomNumber(min,max) {\n  return Math.random() * (max - min) + min;\n}\nconst radio = 48;\n\n// Initialize the circle: all located at the center of the svg area\nlet node = svg.append(\"g\")\n  .selectAll(\"circle\")\n  .data(data)\n  .join(\"circle\")\n    .attr(\"r\", radio)\n    .attr(\"cx\", width / 2)\n    .attr(\"cy\", height / 2)\n    .style(\"fill\", d => color(d.group))\n    .attr(\"stroke-width\", \"4\")\n    .call(d3.drag() // call specific function when circle is dragged\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended));\n\n// Features of the forces applied to the nodes:\nvar simulation = d3.forceSimulation()\n  .force(\"x\", d3.forceX().strength(0.3).x(d => x(d.group)))\n  .force(\"y\", d3.forceY().strength(0.1).y( height / 2 ))\n  .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n  .force(\"charge\", d3.forceManyBody().strength(0.1)) // Nodes are attracted one each other of value is > 0\n  .force(\"collide\", d3.forceCollide().strength(8).radius(radio).iterations(3)) // Force that avoids circle overlapping\n\n// Apply these forces to the nodes and update their positions.\n// Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\nsimulation\n    .nodes(data)\n    .on(\"tick\", d => {\n      node\n          .attr(\"cx\", d => d.x)\n          .attr(\"cy\", d => d.y)\n    });\n\n\n// What happens when a circle is dragged?\nfunction dragstarted(event, d) {\n  if (!event.active) simulation.alphaTarget(.03).restart();\n   d.fx = d.x;\n   d.fy = d.y;\n }\n function dragged(event, d) {\n   d.fx = event.x;\n   d.fy = event.y;\n }\n function dragended(event, d) {\n  if (!event.active) simulation.alphaTarget(.03);\n   d.fx = null;\n   d.fy = null;\n }\n"],"names":[],"version":3,"file":"index.17214e9c.js.map","sourceRoot":"/__parcel_source_root/"}